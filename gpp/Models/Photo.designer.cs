#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gpp.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Personal")]
	public partial class PhotoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAlbum(Album instance);
    partial void UpdateAlbum(Album instance);
    partial void DeleteAlbum(Album instance);
    partial void InsertPhoto(Photo instance);
    partial void UpdatePhoto(Photo instance);
    partial void DeletePhoto(Photo instance);
    #endregion
		
		public PhotoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["PersonalConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PhotoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Album> Albums
		{
			get
			{
				return this.GetTable<Album>();
			}
		}
		
		public System.Data.Linq.Table<Photo> Photos
		{
			get
			{
				return this.GetTable<Photo>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddAlbum")]
		public int AddAlbum([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Caption", DbType="NVarChar(50)")] string caption, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPublic", DbType="Bit")] System.Nullable<bool> isPublic)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), caption, isPublic);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemovePhoto")]
		public int RemovePhoto([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhotoID", DbType="Int")] System.Nullable<int> photoID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), photoID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.AddPhoto")]
		public int AddPhoto([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlbumID", DbType="Int")] System.Nullable<int> albumID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Caption", DbType="NVarChar(50)")] string caption, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BytesOriginal", DbType="Image")] System.Data.Linq.Binary bytesOriginal, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BytesFull", DbType="Image")] System.Data.Linq.Binary bytesFull, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BytesPoster", DbType="Image")] System.Data.Linq.Binary bytesPoster, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BytesThumb", DbType="Image")] System.Data.Linq.Binary bytesThumb)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), albumID, caption, bytesOriginal, bytesFull, bytesPoster, bytesThumb);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditAlbum")]
		public int EditAlbum([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Caption", DbType="NVarChar(50)")] string caption, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPublic", DbType="Bit")] System.Nullable<bool> isPublic, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlbumID", DbType="Int")] System.Nullable<int> albumID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), caption, isPublic, albumID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.EditPhoto")]
		public int EditPhoto([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Caption", DbType="NVarChar(50)")] string caption, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhotoID", DbType="Int")] System.Nullable<int> photoID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), caption, photoID);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetAlbums")]
		public ISingleResult<GetAlbumsResult> GetAlbums([global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPublic", DbType="Bit")] System.Nullable<bool> isPublic)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), isPublic);
			return ((ISingleResult<GetAlbumsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetFirstPhoto")]
		public ISingleResult<GetFirstPhotoResult> GetFirstPhoto([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlbumID", DbType="Int")] System.Nullable<int> albumID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPublic", DbType="Bit")] System.Nullable<bool> isPublic)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), albumID, size, isPublic);
			return ((ISingleResult<GetFirstPhotoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetNonEmptyAlbums")]
		public ISingleResult<GetNonEmptyAlbumsResult> GetNonEmptyAlbums()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<GetNonEmptyAlbumsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPhoto")]
		public ISingleResult<GetPhotoResult> GetPhoto([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PhotoID", DbType="Int")] System.Nullable<int> photoID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Size", DbType="Int")] System.Nullable<int> size, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPublic", DbType="Bit")] System.Nullable<bool> isPublic)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), photoID, size, isPublic);
			return ((ISingleResult<GetPhotoResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPhotos")]
		public ISingleResult<GetPhotosResult> GetPhotos([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlbumID", DbType="Int")] System.Nullable<int> albumID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsPublic", DbType="Bit")] System.Nullable<bool> isPublic)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), albumID, isPublic);
			return ((ISingleResult<GetPhotosResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.RemoveAlbum")]
		public int RemoveAlbum([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AlbumID", DbType="Int")] System.Nullable<int> albumID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), albumID);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Albums")]
	public partial class Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AlbumID;
		
		private string _Caption;
		
		private bool _IsPublic;
		
		private EntitySet<Photo> _Photos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnIsPublicChanging(bool value);
    partial void OnIsPublicChanged();
    #endregion
		
		public Album()
		{
			this._Photos = new EntitySet<Photo>(new Action<Photo>(this.attach_Photos), new Action<Photo>(this.detach_Photos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this.OnIsPublicChanging(value);
					this.SendPropertyChanging();
					this._IsPublic = value;
					this.SendPropertyChanged("IsPublic");
					this.OnIsPublicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Photo", Storage="_Photos", ThisKey="AlbumID", OtherKey="AlbumID")]
		public EntitySet<Photo> Photos
		{
			get
			{
				return this._Photos;
			}
			set
			{
				this._Photos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Photos(Photo entity)
		{
			this.SendPropertyChanging();
			entity.Album = this;
		}
		
		private void detach_Photos(Photo entity)
		{
			this.SendPropertyChanging();
			entity.Album = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Photos")]
	public partial class Photo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PhotoID;
		
		private int _AlbumID;
		
		private string _Caption;
		
		private System.Data.Linq.Binary _BytesOriginal;
		
		private System.Data.Linq.Binary _BytesFull;
		
		private System.Data.Linq.Binary _BytesPoster;
		
		private System.Data.Linq.Binary _BytesThumb;
		
		private EntityRef<Album> _Album;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoIDChanging(int value);
    partial void OnPhotoIDChanged();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnCaptionChanging(string value);
    partial void OnCaptionChanged();
    partial void OnBytesOriginalChanging(System.Data.Linq.Binary value);
    partial void OnBytesOriginalChanged();
    partial void OnBytesFullChanging(System.Data.Linq.Binary value);
    partial void OnBytesFullChanged();
    partial void OnBytesPosterChanging(System.Data.Linq.Binary value);
    partial void OnBytesPosterChanged();
    partial void OnBytesThumbChanging(System.Data.Linq.Binary value);
    partial void OnBytesThumbChanged();
    #endregion
		
		public Photo()
		{
			this._Album = default(EntityRef<Album>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int PhotoID
		{
			get
			{
				return this._PhotoID;
			}
			set
			{
				if ((this._PhotoID != value))
				{
					this.OnPhotoIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoID = value;
					this.SendPropertyChanged("PhotoID");
					this.OnPhotoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL")]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					if (this._Album.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this.OnCaptionChanging(value);
					this.SendPropertyChanging();
					this._Caption = value;
					this.SendPropertyChanged("Caption");
					this.OnCaptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesOriginal", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BytesOriginal
		{
			get
			{
				return this._BytesOriginal;
			}
			set
			{
				if ((this._BytesOriginal != value))
				{
					this.OnBytesOriginalChanging(value);
					this.SendPropertyChanging();
					this._BytesOriginal = value;
					this.SendPropertyChanged("BytesOriginal");
					this.OnBytesOriginalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesFull", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BytesFull
		{
			get
			{
				return this._BytesFull;
			}
			set
			{
				if ((this._BytesFull != value))
				{
					this.OnBytesFullChanging(value);
					this.SendPropertyChanging();
					this._BytesFull = value;
					this.SendPropertyChanged("BytesFull");
					this.OnBytesFullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesPoster", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BytesPoster
		{
			get
			{
				return this._BytesPoster;
			}
			set
			{
				if ((this._BytesPoster != value))
				{
					this.OnBytesPosterChanging(value);
					this.SendPropertyChanging();
					this._BytesPoster = value;
					this.SendPropertyChanged("BytesPoster");
					this.OnBytesPosterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesThumb", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary BytesThumb
		{
			get
			{
				return this._BytesThumb;
			}
			set
			{
				if ((this._BytesThumb != value))
				{
					this.OnBytesThumbChanging(value);
					this.SendPropertyChanging();
					this._BytesThumb = value;
					this.SendPropertyChanged("BytesThumb");
					this.OnBytesThumbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Album_Photo", Storage="_Album", ThisKey="AlbumID", OtherKey="AlbumID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Album Album
		{
			get
			{
				return this._Album.Entity;
			}
			set
			{
				Album previousValue = this._Album.Entity;
				if (((previousValue != value) 
							|| (this._Album.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Album.Entity = null;
						previousValue.Photos.Remove(this);
					}
					this._Album.Entity = value;
					if ((value != null))
					{
						value.Photos.Add(this);
						this._AlbumID = value.AlbumID;
					}
					else
					{
						this._AlbumID = default(int);
					}
					this.SendPropertyChanged("Album");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetAlbumsResult
	{
		
		private int _AlbumID;
		
		private string _Caption;
		
		private bool _IsPublic;
		
		private System.Nullable<int> _NumberOfPhotos;
		
		public GetAlbumsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL")]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this._AlbumID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this._Caption = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit NOT NULL")]
		public bool IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfPhotos", DbType="Int")]
		public System.Nullable<int> NumberOfPhotos
		{
			get
			{
				return this._NumberOfPhotos;
			}
			set
			{
				if ((this._NumberOfPhotos != value))
				{
					this._NumberOfPhotos = value;
				}
			}
		}
	}
	
	public partial class GetFirstPhotoResult
	{
		
		private System.Data.Linq.Binary _BytesThumb;
		
		public GetFirstPhotoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesThumb", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary BytesThumb
		{
			get
			{
				return this._BytesThumb;
			}
			set
			{
				if ((this._BytesThumb != value))
				{
					this._BytesThumb = value;
				}
			}
		}
	}
	
	public partial class GetNonEmptyAlbumsResult
	{
		
		private int _AlbumID;
		
		public GetNonEmptyAlbumsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL")]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this._AlbumID = value;
				}
			}
		}
	}
	
	public partial class GetPhotoResult
	{
		
		private System.Data.Linq.Binary _BytesThumb;
		
		public GetPhotoResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesThumb", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary BytesThumb
		{
			get
			{
				return this._BytesThumb;
			}
			set
			{
				if ((this._BytesThumb != value))
				{
					this._BytesThumb = value;
				}
			}
		}
	}
	
	public partial class GetPhotosResult
	{
		
		private int _PhotoID;
		
		private int _AlbumID;
		
		private string _Caption;
		
		private System.Data.Linq.Binary _BytesOriginal;
		
		private System.Data.Linq.Binary _BytesFull;
		
		private System.Data.Linq.Binary _BytesPoster;
		
		private System.Data.Linq.Binary _BytesThumb;
		
		private System.Nullable<int> _AlbumID1;
		
		private string _Caption1;
		
		private System.Nullable<bool> _IsPublic;
		
		public GetPhotosResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoID", DbType="Int NOT NULL")]
		public int PhotoID
		{
			get
			{
				return this._PhotoID;
			}
			set
			{
				if ((this._PhotoID != value))
				{
					this._PhotoID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL")]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this._AlbumID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Caption
		{
			get
			{
				return this._Caption;
			}
			set
			{
				if ((this._Caption != value))
				{
					this._Caption = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesOriginal", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary BytesOriginal
		{
			get
			{
				return this._BytesOriginal;
			}
			set
			{
				if ((this._BytesOriginal != value))
				{
					this._BytesOriginal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesFull", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary BytesFull
		{
			get
			{
				return this._BytesFull;
			}
			set
			{
				if ((this._BytesFull != value))
				{
					this._BytesFull = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesPoster", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary BytesPoster
		{
			get
			{
				return this._BytesPoster;
			}
			set
			{
				if ((this._BytesPoster != value))
				{
					this._BytesPoster = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BytesThumb", DbType="Image NOT NULL", CanBeNull=false)]
		public System.Data.Linq.Binary BytesThumb
		{
			get
			{
				return this._BytesThumb;
			}
			set
			{
				if ((this._BytesThumb != value))
				{
					this._BytesThumb = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID1", DbType="Int")]
		public System.Nullable<int> AlbumID1
		{
			get
			{
				return this._AlbumID1;
			}
			set
			{
				if ((this._AlbumID1 != value))
				{
					this._AlbumID1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Caption1", DbType="NVarChar(50)")]
		public string Caption1
		{
			get
			{
				return this._Caption1;
			}
			set
			{
				if ((this._Caption1 != value))
				{
					this._Caption1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPublic", DbType="Bit")]
		public System.Nullable<bool> IsPublic
		{
			get
			{
				return this._IsPublic;
			}
			set
			{
				if ((this._IsPublic != value))
				{
					this._IsPublic = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
